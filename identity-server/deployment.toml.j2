[server]
hostname = "{{ primay_cname }}"
node_ip = "{{ node_ip }}"
#base_path = "https://$ref{server.hostname}:${carbon.management.port}"
offset = {{ port_offset }}
server_role = "identity-server"

[super_admin]
username = "{{ admin_username }}"
password = "{{ admin_password }}"
create_admin_account = true

[user_store]
# type = "database" doesn't work
type = "database_unique_id"

[database.user]
url = "{{ database_user_url }}"
username = "{{ database_user_username }}"
password = "{{ database_user_password }}"
driver = "{{ jdbc_driver }}"

[realm_manager]
data_source = "WSO2USER_DB"

[database.identity_db]
type = "{{ wso2is_identity_db_type }}"
url = "{{ wso2is_identity_db_url }}"
username = "{{ wso2is_identity_db_username }}"
password = "{{ wso2is_identity_db_password }}"
driver = "{{ jdbc_driver }}"
[database.identity_db.pool_options]
validationQuery = "{{ wso2is_identity_db_validation_query }}"
pool_options.maxActive = "300"
pool_options.maxWait = "60000"
pool_options.minIdle = "5"
pool_options.testOnBorrow = true
pool_options.validationInterval="30000"
pool_options.defaultAutoCommit=false
{% if slow_query_report|bool %}pool_options.jdbcInterceptors = "org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=30)"{% endif %}
pool_options.commitOnReturn=true
pool_options.rollbackOnReturn=false
pool_options.logAbandoned=true
pool_options.removeAbandoned=true
pool_options.removeAbandonedTimeout="120000"

[database.shared_db]
type = "{{ wso2is_shared_db_type }}"
url = "{{ wso2is_shared_db_url }}"
username = "{{ wso2is_shared_db_username }}"
password = "{{ wso2is_shared_db_password }}"
[database.shared_db.pool_options]
validationQuery = "{{ wso2is_shared_db_validation_query }}"
pool_options.maxActive = "300"
pool_options.maxWait = "60000"
pool_options.minIdle = "5"
pool_options.testOnBorrow = true
pool_options.validationInterval="30000"
pool_options.defaultAutoCommit=false
pool_options.jdbcInterceptors = "org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=30)"
pool_options.commitOnReturn=true
pool_options.rollbackOnReturn=false
pool_options.logAbandoned=true
pool_options.removeAbandoned=true
pool_options.removeAbandonedTimeout="120000"

[database.bps_database]
type = "{{ wso2is_bps_db_type }}"
url = "{{ wso2is_bps_db_url }}"
username = "{{ wso2is_bps_db_username }}"
password = "{{ wso2is_bps_db_password }}"
driver = "{{ wso2is_bps_db_driver }}"
[database.bps_database.pool_options]
validationQuery = "{{ wso2is_bps_db_validation_query }}"
pool_options.maxActive = "300"
pool_options.maxWait = "60000"
pool_options.minIdle = "5"
pool_options.testOnBorrow = true
pool_options.validationInterval="30000"
pool_options.defaultAutoCommit=false
pool_options.jdbcInterceptors = "org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=30)"
pool_options.commitOnReturn=true
pool_options.rollbackOnReturn=false
pool_options.logAbandoned=true
pool_options.removeAbandoned=true
pool_options.removeAbandonedTimeout="120000"

# [[datasource]]
# id = "{{ wso2is_consent_db_id }}"
# type = "{{ wso2is_consent_db_type }}"
# url = "{{ wso2is_consent_db_url }}"
# username = "{{ wso2is_consent_db_username }}"
# password = "{{ wso2is_consent_db_password }}"
# driver = "{{ wso2is_consent_db_driver }}"
# pool_options.validationQuery = "{{ wso2is_consent_db_validation_query }}"
# pool_options.maxActive = "300"
# pool_options.maxWait = "60000"
# pool_options.minIdle = "5"
# pool_options.testOnBorrow = true
# pool_options.validationInterval="30000"
# pool_options.defaultAutoCommit=false
# pool_options.jdbcInterceptors = "org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=30)"
# pool_options.commitOnReturn=true
# pool_options.rollbackOnReturn=false
# pool_options.logAbandoned=true
# pool_options.removeAbandoned=true
# pool_options.removeAbandonedTimeout="120000"

# [authentication.consent]
# data_source="jdbc/{{ wso2is_consent_db_id }}"

[event.default_listener.application_authentication]
enable = "{{ wso2is_enable_event_listener }}"

[identity_mgt.events.schemes.analyticsLoginDataPublisher.properties]
enable = "{{ wso2is_enable_handler_for_login_stats }}"

[identity_mgt.events.schemes.analyticsSessionDataPublisher.properties]
enable = "{{ wso2is_enable_handler_for_session_stats }}"

[apim.cors]
allow_origins = "*"
allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS", "HEAD"]
allow_headers = [
"authorization",
"Access-Control-Allow-Origin",
"Content-Type",
"traceparent",
"Accept",
"Accept-encoding",
"Access-Control-Allow-Credentials",
"Access-Control-Allow-Headers",
"Access-Control-Allow-Methods",
"Access-Control-Allow-Origin",
"Access-Control-Request-Headers",
"Access-Control-Request-Method",
"Authorization",
"Content-Length",
"Content-Security-Policy",
"Content-Type",
"Origin",
"Referrer-Policy",
"Strict-Transport-Security",
"X-Requested-With",
"X-Forwarded-Proto",
"X-Forwarded-Prefix",
"X-Forwarded-Host",
"Host",
"X-Forwarded-*",
"X-Xss-Protection",
"X-Frame-Options",
"X-Content-Type-Options",
"X-Download-Options",
"X-Permitted-Cross-Domain-Policies","X-App",
"X-Application",
"X-ApplicationName",
"X-TenantID",
"X-Tenant-Id",
"X-Entity-Id",
"X-Request-Id",
"X-RequestId",
"X-EntityID",
"X-CorrelationID",
"X-Correlation-Id",
"X-Transaction-Token",
"X-Transaction-Hash",
"X-UNB-Transaction-Token",
"X-OperationId",
"X-UNB-Transition-Hash",
"X-UNB-User-SecretKey",
"SSL-CLIENT-CERT"
]
allow_credentials = false

[keystore.primary]
name = "{{ keystore_location }}"
type = "{{ keystore_type }}"
password = "{{ keystore_password }}"
alias = "{{ keystore_key_alias }}"
key_password = "{{ keystore_key_password }}"

[keystore.internal]
filename = "{{ internal_keystore_location }}"
type = "{{ internal_keystore_type }}"
password = "{{ internal_keystore_password }}"
alias = "{{ internal_keystore_key_alias }}"
key_password = "{{ internal_keystore_key_password }}"

[truststore]
file_name = "{{ truststore_location }}"
type = "{{ truststore_type }}"
password = "{{ truststore_password }}"

[transport.http.properties]
maxThreads = "{{ catalina_server_connector_http_max_threads }}"
acceptCount = "{{ catalina_server_connector_http_accept_count }}"

[transport.https.properties]
proxyPort = 443
maxThreads = "{{ catalina_server_connector_https_max_threads }}"
acceptCount = "{{ catalina_server_connector_https_accept_count }}"

## Configure the Traffic Manager endpoints ##
[[event_listener]]
id = "token_revocation"
type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
name = "org.wso2.is.notification.ApimOauthEventInterceptor"
order = 1

## Configure the event listener endpoint to publish controller events ##
[event_listener.properties]
notification_endpoint = "https://{{ control_plane_host }}:443/internal/data/v1/notify"
username = "${admin.username}"
password = "${admin.password}"
'header.X-WSO2-KEY-MANAGER' = "WSO2-IS"

[[resource.access_control]]
context = "(.)/keymanager-operations/user-info/claims(.)"
secure = true
http_method = "GET"
permissions = "/permission/admin/manage/identity/usermgt/list"
scopes = "internal_user_mgt_list"

[[resource.access_control]]
context = "(.*)/keymanager-operations/user-info/claims/generate"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/usermgt/list"
scopes = "internal_user_mgt_list"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/applicationmgt/create"
scopes = "internal_application_mgt_create"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "GET"
permissions = "/permission/admin/manage/identity/applicationmgt/view"
scopes = "internal_application_mgt_view"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "DELETE"
permissions = "/permission/admin/manage/identity/applicationmgt/delete"
scopes = "internal_application_mgt_delete"

[[resource.access_control]]
context = "(.*)/keymanager-operations/dcr/register(.*)"
secure = true
http_method = "PUT"
permissions = "/permission/admin/manage/identity/applicationmgt/update"
scopes = "internal_application_mgt_update"

[[resource.access_control]]
context = "(.)/keymanager-operations/dcr/register(.)"
secure = true
http_method = "POST"
permissions = "/permission/admin/manage/identity/applicationmgt/update"
scopes = "internal_application_mgt_update"

[tenant_context.rewrite]
custom_webapps = ["/keymanager-operations/"]

[carbon_health_check]
enable = true

[carbon_health_check.health_checker.data_source_health_checker]
enable = true
pool_usage_limit_percentage = "80"
order = "97"

[carbon_health_check.health_checker.data_source_health_checker.properties]
'monitored.datasources' = "jdbc/WSO2CarbonDB,jdbc/WSO2UM_DB,jdbc/SHARED_DB"

#'monitored.datasources' = "jdbc/WSO2CarbonDB,jdbc/WSO2AM_DB,jdbc/SHARED_DB,jdbc/WSO2MetricsDB,jdbc/WSO2AM_STATS_DB,jdbc/WSO2IdentityDB,jdbc/WSO2ConsentDS,jdbc/WSO2BPSDB"

[carbon_health_check.health_checker.super_tenant_health_checker.properties]
'monitored.user.stores' = "primary"

[identity_mgt.analytics_login_data_publisher]
enable=true

[identity_mgt.analytics_session_data_publisher] 
enable=true

[analytics]
publish_password_grant_logins=true

